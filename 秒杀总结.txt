1 mybatis-sql的搭建
新建表-生成表的实体类，生成dao接口-mapper.xml配置文件 
2 测试dao的时候，测试类会加载配置文件，配置文件中包括
①数据库，
②SqlSessionFactory的配置-mybatis文件的加载，mapper.xml的包加载
③通过配置MapperScannerConfiger，让SqlSessionFactory(id)和dao(包位置)自动注入到spring容器中。

2 前端和后台的交互
① 加载web.xml文件的dispater加载所有的配置文件(dao mvc .....)
② mvc文件，配置前缀和后缀，返回jsp文件的时候只需要返回jsp的文件名字即可
不需要写包名称或者后缀的文件类型，webcontrol的配置
③ 配置webcontrol的RequestMapping时候要注意
@RequestMapping("/seckill")//默认是value http://localhost:8080/项目名/seckill（正确）
如果配置成@RequestMapping("seckill")他会映射成http://localhost:8080/seckill(错误，没有项目名，服务器映射不到)
RequestMapping中的name和value的区别

3 简单的redis使用
redis-缓存，频繁的访问数据库会导致延迟，所以对于经常使用的数据
会缓存到redis服务器中，如果服务器中没有在访问数据库，同时将数据
放到redis中，数据放入服务器中就涉及到取(二进制数据转换成类数据-反序列化)和存(类数据转换成二进制数据-序列化)，所以redis在 存和取的时候都会先进行这两个操作，java中已经写好的序列化接口，但是效率
并不是很高(序列化和反序列化的时间，序列化生成的数据大小)，这里使用RuntimeSchema

redis可以类比成map，要有key和value不论put和get的时候
序列化和反序列化同时也需要原数据（二进制数据）和规则（RuntimeSchema）
如













